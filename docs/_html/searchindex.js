Search.setIndex({"alltitles": {"(B - L)SSM for a 95 GeV Higgs": [[9, "b-l-ssm-for-a-95-gev-higgs"]], "2D Double Objective Test Function": [[9, "d-double-objective-test-function"]], "An example cell": [[7, "an-example-cell"], [10, "an-example-cell"]], "Args:": [[1, "args"], [1, "id5"]], "Code blocks and outputs": [[8, "code-blocks-and-outputs"], [12, "code-blocks-and-outputs"]], "Content with notebooks": [[8, "content-with-notebooks"], [12, "content-with-notebooks"]], "Create a notebook with MyST Markdown": [[7, "create-a-notebook-with-myst-markdown"], [10, "create-a-notebook-with-myst-markdown"]], "Example:": [[5, "example"]], "Example: Test Objective Function": [[9, "example-test-objective-function"]], "Markdown + notebooks": [[8, "markdown-notebooks"], [12, "markdown-notebooks"]], "Module contents": [[0, "module-hepaid"], [1, "module-hepaid.hep"], [2, "module-hepaid.search"], [3, "module-hepaid.search.models"], [4, "module-hepaid.search.parallel"], [5, "module-hepaid.search.policy"]], "MyST markdown": [[8, "myst-markdown"], [12, "myst-markdown"]], "Notebooks with MyST Markdown": [[7, "notebooks-with-myst-markdown"], [10, "notebooks-with-myst-markdown"]], "Overview": [[9, "overview"]], "Parameters:": [[5, "parameters"]], "Quickly add YAML metadata for MyST Notebooks": [[7, "quickly-add-yaml-metadata-for-myst-notebooks"], [10, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Raises:": [[5, "raises"]], "Requirements": [[9, "requirements"]], "Results": [[9, "results"]], "Return:": [[1, "return"]], "Returns:": [[5, "returns"]], "Submodules": [[1, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"]], "Using b-CASTOR on a custom problem": [[9, "using-b-castor-on-a-custom-problem"]], "Welcome to your Jupyter Book": [[6, "welcome-to-your-jupyter-book"]], "b-CASTOR": [[9, "b-castor"]], "hepaid": [[11, "hepaid"]], "hepaid package": [[0, "hepaid-package"]], "hepaid.hep package": [[1, "hepaid-hep-package"]], "hepaid.hep.data module": [[1, "module-hepaid.hep.data"]], "hepaid.hep.read module": [[1, "module-hepaid.hep.read"]], "hepaid.hep.stack module": [[1, "module-hepaid.hep.stack"]], "hepaid.hep.tools module": [[1, "module-hepaid.hep.tools"]], "hepaid.hep.utils module": [[1, "module-hepaid.hep.utils"]], "hepaid.search package": [[2, "hepaid-search-package"]], "hepaid.search.models package": [[3, "hepaid-search-models-package"]], "hepaid.search.models.model_list module": [[3, "module-hepaid.search.models.model_list"]], "hepaid.search.parallel package": [[4, "hepaid-search-parallel-package"]], "hepaid.search.parallel.modules module": [[4, "module-hepaid.search.parallel.modules"]], "hepaid.search.policy package": [[5, "hepaid-search-policy-package"]], "hepaid.search.policy.base module": [[5, "module-hepaid.search.policy.base"]], "hepaid.search.policy.bcastor module": [[5, "module-hepaid.search.policy.bcastor"]], "hepaid.search.policy.cas module": [[5, "module-hepaid.search.policy.cas"]], "hepaid.search.policy.eci module": [[5, "module-hepaid.search.policy.eci"]], "hepaid.search.policy.mcmc module": [[5, "module-hepaid.search.policy.mcmc"]]}, "docnames": ["hepaid", "hepaid.hep", "hepaid.search", "hepaid.search.models", "hepaid.search.parallel", "hepaid.search.policy", "intro", "jupyter_execute/markdown-notebooks", "jupyter_execute/notebooks", "markdown", "markdown-notebooks", "modules", "notebooks"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["hepaid.rst", "hepaid.hep.rst", "hepaid.search.rst", "hepaid.search.models.rst", "hepaid.search.parallel.rst", "hepaid.search.policy.rst", "intro.md", "jupyter_execute/markdown-notebooks.ipynb", "jupyter_execute/notebooks.ipynb", "markdown.md", "markdown-notebooks.md", "modules.rst", "notebooks.ipynb"], "indexentries": {"_thresholds (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI._thresholds", false]], "accepted (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.accepted", false]], "adapt_frequency (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.adapt_frequency", false]], "add() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.add", false]], "add_process() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.add_process", false]], "as_dataframe() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.as_dataframe", false]], "as_dict() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.as_dict", false]], "as_dict() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.as_dict", false]], "as_txt() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.as_txt", false]], "auto_likelihood() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.auto_likelihood", false]], "ball_of_points (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.ball_of_points", false]], "base_points (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.base_points", false]], "bcastor (class in hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.bCASTOR", false]], "bcastor_step() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.bcastor_step", false]], "block (class in hepaid.hep.read)": [[1, "hepaid.hep.read.Block", false]], "block (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.block", false]], "block() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.block", false]], "block() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.block", false], [1, "id0", false]], "block2dict() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.block2dict", false]], "block2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.block2dict", false]], "blockline (class in hepaid.hep.read)": [[1, "hepaid.hep.read.BlockLine", false]], "blocklineslha (class in hepaid.hep.read)": [[1, "hepaid.hep.read.BlockLineSLHA", false]], "blockslha (class in hepaid.hep.read)": [[1, "hepaid.hep.read.BlockSLHA", false]], "body_values_2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.body_values_2dict", false]], "body_values_2dict_lhs() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.body_values_2dict_lhs", false]], "bounds (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.bounds", false]], "br_2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.br_2dict", false]], "cas (class in hepaid.search.policy.cas)": [[5, "hepaid.search.policy.cas.CAS", false]], "close() (hepaid.hep.stack.spheno method)": [[1, "hepaid.hep.stack.SPheno.close", false], [1, "id2", false]], "close() (hepaid.hep.stack.sphenohbhs method)": [[1, "hepaid.hep.stack.SPhenoHbHs.close", false]], "close() (hepaid.hep.stack.thdmcext method)": [[1, "hepaid.hep.stack.THDMCExt.close", false]], "comments() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.comments", false]], "comments() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.comments", false]], "constraints (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.constraints", false]], "covar_dist() (in module hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.covar_dist", false]], "create_dir() (hepaid.hep.stack.spheno method)": [[1, "hepaid.hep.stack.SPheno.create_dir", false]], "create_dir() (hepaid.hep.stack.sphenohbhs method)": [[1, "hepaid.hep.stack.SPhenoHbHs.create_dir", false]], "create_dir() (hepaid.hep.stack.thdmcext method)": [[1, "hepaid.hep.stack.THDMCExt.create_dir", false]], "create_optuna_objective() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.create_optuna_objective", false]], "curr_likeli (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.curr_likeli", false]], "curr_state (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.curr_state", false]], "current_lhs (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.current_lhs", false]], "current_spc (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.current_spc", false]], "data (hepaid.hep.data.hepdataset property)": [[1, "hepaid.hep.data.HEPDataSet.data", false]], "decay_block_2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.decay_block_2dict", false]], "default() (hepaid.hep.data.dequeencoder method)": [[1, "hepaid.hep.data.DequeEncoder.default", false]], "define_multiparticles() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.define_multiparticles", false]], "delphes_card() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.delphes_card", false]], "delta_r (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.delta_r", false]], "delta_r (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.delta_r", false]], "dequeencoder (class in hepaid.hep.data)": [[1, "hepaid.hep.data.DequeEncoder", false]], "detector() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.detector", false]], "dict2json() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.dict2json", false]], "dim (hepaid.search.policy.eci.eci property)": [[5, "hepaid.search.policy.eci.ECI.dim", false]], "dist() (in module hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.dist", false]], "eci (class in hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.ECI", false]], "eci (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.eci", false]], "eci (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.eci", false]], "eci_step() (in module hepaid.search.policy.cas)": [[5, "hepaid.search.policy.cas.eci_step", false]], "entries() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.entries", false]], "extract_line_elements() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.extract_line_elements", false]], "feature_vector() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.feature_vector", false]], "feature_vector() (in module hepaid.hep.data)": [[1, "hepaid.hep.data.feature_vector", false]], "find_block() (hepaid.hep.read.leshouches static method)": [[1, "hepaid.hep.read.LesHouches.find_block", false]], "find_block() (hepaid.hep.read.slha static method)": [[1, "hepaid.hep.read.SLHA.find_block", false]], "find_hepdata_files() (in module hepaid.hep.data)": [[1, "hepaid.hep.data.find_hepdata_files", false]], "fline() (hepaid.hep.read.blockline method)": [[1, "hepaid.hep.read.BlockLine.fline", false]], "generic_block_2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.generic_block_2dict", false]], "generic_block_2dict_lhs() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.generic_block_2dict_lhs", false]], "get() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.get", false]], "get() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.get", false]], "get_() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.get_", false]], "get_and_fit_gp() (in module hepaid.search.models.model_list)": [[3, "hepaid.search.models.model_list.get_and_fit_gp", false]], "get_lhs() (hepaid.hep.stack.spheno method)": [[1, "hepaid.hep.stack.SPheno.get_lhs", false], [1, "id3", false]], "get_lhs() (hepaid.hep.stack.sphenohbhs method)": [[1, "hepaid.hep.stack.SPhenoHbHs.get_lhs", false]], "get_model_and_likelihood() (in module hepaid.search.models.model_list)": [[3, "hepaid.search.models.model_list.get_model_and_likelihood", false]], "get_model_list_gp() (in module hepaid.search.models.model_list)": [[3, "hepaid.search.models.model_list.get_model_list_gp", false]], "get_posterior() (in module hepaid.search.models.model_list)": [[3, "hepaid.search.models.model_list.get_posterior", false]], "hepaid": [[0, "module-hepaid", false]], "hepaid.hep": [[1, "module-hepaid.hep", false]], "hepaid.hep.data": [[1, "module-hepaid.hep.data", false]], "hepaid.hep.read": [[1, "module-hepaid.hep.read", false]], "hepaid.hep.stack": [[1, "module-hepaid.hep.stack", false]], "hepaid.hep.tools": [[1, "module-hepaid.hep.tools", false]], "hepaid.hep.utils": [[1, "module-hepaid.hep.utils", false]], "hepaid.search": [[2, "module-hepaid.search", false]], "hepaid.search.models": [[3, "module-hepaid.search.models", false]], "hepaid.search.models.model_list": [[3, "module-hepaid.search.models.model_list", false]], "hepaid.search.parallel": [[4, "module-hepaid.search.parallel", false]], "hepaid.search.parallel.modules": [[4, "module-hepaid.search.parallel.modules", false]], "hepaid.search.policy": [[5, "module-hepaid.search.policy", false]], "hepaid.search.policy.base": [[5, "module-hepaid.search.policy.base", false]], "hepaid.search.policy.bcastor": [[5, "module-hepaid.search.policy.bcastor", false]], "hepaid.search.policy.cas": [[5, "module-hepaid.search.policy.cas", false]], "hepaid.search.policy.eci": [[5, "module-hepaid.search.policy.eci", false]], "hepaid.search.policy.mcmc": [[5, "module-hepaid.search.policy.mcmc", false]], "hepdataset (class in hepaid.hep.data)": [[1, "hepaid.hep.data.HEPDataSet", false]], "higgsbounds (class in hepaid.hep.tools)": [[1, "hepaid.hep.tools.HiggsBounds", false]], "higgsboundsresults (class in hepaid.hep.read)": [[1, "hepaid.hep.read.HiggsBoundsResults", false]], "higgssignals (class in hepaid.hep.tools)": [[1, "hepaid.hep.tools.HiggsSignals", false]], "higgssignalsresults (class in hepaid.hep.read)": [[1, "hepaid.hep.read.HiggsSignalsResults", false]], "hp (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.hp", false]], "hp (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.hp", false]], "hp_input (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.hp_input", false]], "hp_name (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.hp_name", false]], "idx_burnin (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.idx_burnin", false]], "import_model() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.import_model", false]], "index (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.index", false]], "input_vector_to_lhs() (in module hepaid.hep.stack)": [[1, "hepaid.hep.stack.input_vector_to_lhs", false]], "is_none() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.is_none", false]], "iteration (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.iteration", false]], "iteration (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.iteration", false]], "iteration (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.iteration", false]], "iteration (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.iteration", false]], "json2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.json2dict", false]], "keys() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.keys", false]], "keys() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.keys", false]], "keys() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.keys", false]], "keys() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.keys", false]], "launch() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.launch", false]], "leshouches (class in hepaid.hep.read)": [[1, "hepaid.hep.read.LesHouches", false]], "lhe2dict() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.lhe2dict", false]], "lheblock2dict() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.lheblock2dict", false]], "lhs (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.lhs", false]], "lhs2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.lhs2dict", false]], "likelihood (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.likelihood", false]], "likelihood (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.likelihood", false]], "likelihood (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.likelihood", false]], "lines() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.lines", false]], "lines() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.lines", false]], "load_checkpoint() (hepaid.search.policy.base.policy method)": [[5, "hepaid.search.policy.base.Policy.load_checkpoint", false], [5, "id0", false]], "load_from_directory() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.load_from_directory", false]], "load_json() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.load_json", false]], "madgraph (class in hepaid.hep.tools)": [[1, "hepaid.hep.tools.Madgraph", false]], "mcmc_updater() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.mcmc_updater", false]], "mcmcmh (class in hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.MCMCMH", false]], "merge_datasets() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.merge_datasets", false]], "merge_hepstacks() (in module hepaid.hep.data)": [[1, "hepaid.hep.data.merge_hepstacks", false]], "merge_slha_files() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.merge_slha_files", false]], "metrics (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.metrics", false]], "metrics (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.metrics", false]], "metrics (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.metrics", false]], "mg5script (class in hepaid.hep.read)": [[1, "hepaid.hep.read.MG5Script", false]], "model (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.model", false]], "model (hepaid.search.policy.cas.cas attribute)": [[5, "hepaid.search.policy.cas.CAS.model", false]], "model_param_blocks() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.model_param_blocks", false]], "module": [[0, "module-hepaid", false], [1, "module-hepaid.hep", false], [1, "module-hepaid.hep.data", false], [1, "module-hepaid.hep.read", false], [1, "module-hepaid.hep.stack", false], [1, "module-hepaid.hep.tools", false], [1, "module-hepaid.hep.utils", false], [2, "module-hepaid.search", false], [3, "module-hepaid.search.models", false], [3, "module-hepaid.search.models.model_list", false], [4, "module-hepaid.search.parallel", false], [4, "module-hepaid.search.parallel.modules", false], [5, "module-hepaid.search.policy", false], [5, "module-hepaid.search.policy.base", false], [5, "module-hepaid.search.policy.bcastor", false], [5, "module-hepaid.search.policy.cas", false], [5, "module-hepaid.search.policy.eci", false], [5, "module-hepaid.search.policy.mcmc", false]], "new_file() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.new_file", false]], "new_file() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.new_file", false], [1, "id1", false]], "num_outputs (hepaid.search.policy.eci.eci property)": [[5, "hepaid.search.policy.eci.ECI.num_outputs", false]], "objective_function (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.objective_function", false]], "optuna_study_cmaes() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.optuna_study_cmaes", false]], "optuna_study_nsgaii() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.optuna_study_nsgaii", false]], "optuna_study_tpe() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.optuna_study_tpe", false]], "output() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.output", false]], "param_card() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.param_card", false]], "policy (class in hepaid.search.policy.base)": [[5, "hepaid.search.policy.base.Policy", false]], "predict() (in module hepaid.search.models.model_list)": [[3, "hepaid.search.models.model_list.predict", false]], "process() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.process", false]], "proposal_distribution() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.proposal_distribution", false]], "punchout_radius (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.punchout_radius", false]], "rank_based_sampling() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.rank_based_sampling", false]], "read() (hepaid.hep.read.higgsboundsresults method)": [[1, "hepaid.hep.read.HiggsBoundsResults.read", false]], "read() (hepaid.hep.read.higgssignalsresults method)": [[1, "hepaid.hep.read.HiggsSignalsResults.read", false]], "read_blocks() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.read_blocks", false]], "read_from_dict() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.read_from_dict", false]], "read_leshouches() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.read_leshouches", false]], "read_leshouches_from_dict() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.read_leshouches_from_dict", false]], "read_leshouches_from_dir() (hepaid.hep.read.leshouches method)": [[1, "hepaid.hep.read.LesHouches.read_leshouches_from_dir", false]], "read_mg_generation_info() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.read_mg_generation_info", false]], "read_slha_from_file() (hepaid.hep.read.slha method)": [[1, "hepaid.hep.read.SLHA.read_slha_from_file", false]], "register() (in module hepaid.hep.stack)": [[1, "hepaid.hep.stack.register", false]], "reset() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.reset", false]], "result() (hepaid.hep.tools.thdmc method)": [[1, "hepaid.hep.tools.THDMC.result", false]], "run() (hepaid.hep.tools.higgsbounds method)": [[1, "hepaid.hep.tools.HiggsBounds.run", false]], "run() (hepaid.hep.tools.higgssignals method)": [[1, "hepaid.hep.tools.HiggsSignals.run", false]], "run() (hepaid.hep.tools.madgraph method)": [[1, "hepaid.hep.tools.Madgraph.run", false]], "run() (hepaid.hep.tools.spheno method)": [[1, "hepaid.hep.tools.Spheno.run", false]], "run() (hepaid.hep.tools.thdmc method)": [[1, "hepaid.hep.tools.THDMC.run", false]], "run() (hepaid.search.policy.bcastor.bcastor method)": [[5, "hepaid.search.policy.bcastor.bCASTOR.run", false]], "run() (hepaid.search.policy.cas.cas method)": [[5, "hepaid.search.policy.cas.CAS.run", false]], "run() (hepaid.search.policy.mcmc.mcmcmh method)": [[5, "hepaid.search.policy.mcmc.MCMCMH.run", false]], "run_stack_from_lhs() (hepaid.hep.stack.spheno method)": [[1, "hepaid.hep.stack.SPheno.run_stack_from_lhs", false], [1, "id4", false]], "run_stack_from_lhs() (hepaid.hep.stack.sphenohbhs method)": [[1, "hepaid.hep.stack.SPhenoHbHs.run_stack_from_lhs", false]], "run_stack_from_lhs() (hepaid.hep.stack.sphenomg5 method)": [[1, "hepaid.hep.stack.SPhenoMg5.run_stack_from_lhs", false]], "run_x_with_pool() (in module hepaid.search.parallel.modules)": [[4, "hepaid.search.parallel.modules.run_x_with_pool", false]], "sample() (hepaid.hep.stack.spheno method)": [[1, "hepaid.hep.stack.SPheno.sample", false]], "sample() (hepaid.hep.stack.sphenohbhs method)": [[1, "hepaid.hep.stack.SPhenoHbHs.sample", false]], "sample() (hepaid.hep.stack.thdmcext method)": [[1, "hepaid.hep.stack.THDMCExt.sample", false]], "sampler_id_dir (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.sampler_id_dir", false]], "save() (hepaid.hep.read.higgsboundsresults method)": [[1, "hepaid.hep.read.HiggsBoundsResults.save", false]], "save() (hepaid.hep.read.higgssignalsresults method)": [[1, "hepaid.hep.read.HiggsSignalsResults.save", false]], "save_checkpoint() (hepaid.search.policy.base.policy method)": [[5, "hepaid.search.policy.base.Policy.save_checkpoint", false]], "save_json() (hepaid.hep.data.hepdataset method)": [[1, "hepaid.hep.data.HEPDataSet.save_json", false]], "save_path (hepaid.search.policy.base.policy attribute)": [[5, "hepaid.search.policy.base.Policy.save_path", false]], "scale (hepaid.search.policy.mcmc.mcmcmh attribute)": [[5, "hepaid.search.policy.mcmc.MCMCMH.scale", false]], "scan_dir (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.scan_dir", false]], "set() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.set", false]], "set() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.set", false]], "set_() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.set_", false]], "set_parameters() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.set_parameters", false]], "show() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.show", false]], "shower() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.shower", false]], "sigmoid() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.sigmoid", false]], "slha (class in hepaid.hep.read)": [[1, "hepaid.hep.read.SLHA", false]], "slha2dict() (in module hepaid.hep.read)": [[1, "hepaid.hep.read.slha2dict", false]], "slha2dict() (in module hepaid.hep.utils)": [[1, "hepaid.hep.utils.slha2dict", false]], "smooth_box_mask() (in module hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.smooth_box_mask", false]], "smooth_box_mask() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.smooth_box_mask", false]], "smooth_mask() (in module hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.smooth_mask", false]], "smooth_mask() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.smooth_mask", false]], "sort_and_get_n_maximum() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.sort_and_get_n_maximum", false]], "spheno (class in hepaid.hep.stack)": [[1, "hepaid.hep.stack.SPheno", false]], "spheno (class in hepaid.hep.tools)": [[1, "hepaid.hep.tools.Spheno", false]], "spheno (hepaid.hep.stack.spheno attribute)": [[1, "hepaid.hep.stack.SPheno.spheno", false]], "sphenohbhs (class in hepaid.hep.stack)": [[1, "hepaid.hep.stack.SPhenoHbHs", false]], "sphenomg5 (class in hepaid.hep.stack)": [[1, "hepaid.hep.stack.SPhenoMg5", false]], "sq_dist() (in module hepaid.search.policy.eci)": [[5, "hepaid.search.policy.eci.sq_dist", false]], "study (hepaid.search.policy.bcastor.bcastor attribute)": [[5, "hepaid.search.policy.bcastor.bCASTOR.study", false]], "study_to_array() (in module hepaid.search.policy.bcastor)": [[5, "hepaid.search.policy.bcastor.study_to_array", false]], "thdmc (class in hepaid.hep.tools)": [[1, "hepaid.hep.tools.THDMC", false]], "thdmcext (class in hepaid.hep.stack)": [[1, "hepaid.hep.stack.THDMCExt", false]], "train_inputs (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.train_inputs", false]], "train_x (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.train_x", false]], "train_y (hepaid.search.policy.eci.eci attribute)": [[5, "hepaid.search.policy.eci.ECI.train_y", false]], "tune() (in module hepaid.search.policy.mcmc)": [[5, "hepaid.search.policy.mcmc.tune", false]], "update_mg5_script() (hepaid.hep.stack.sphenomg5 method)": [[1, "hepaid.hep.stack.SPhenoMg5.update_mg5_script", false]], "values() (hepaid.hep.read.block method)": [[1, "hepaid.hep.read.Block.values", false]], "values() (hepaid.hep.read.blockslha method)": [[1, "hepaid.hep.read.BlockSLHA.values", false]], "write() (hepaid.hep.read.mg5script method)": [[1, "hepaid.hep.read.MG5Script.write", false]]}, "objects": {"": [[0, 0, 0, "-", "hepaid"]], "hepaid": [[1, 0, 0, "-", "hep"], [2, 0, 0, "-", "search"]], "hepaid.hep": [[1, 0, 0, "-", "data"], [1, 0, 0, "-", "read"], [1, 0, 0, "-", "stack"], [1, 0, 0, "-", "tools"], [1, 0, 0, "-", "utils"]], "hepaid.hep.data": [[1, 1, 1, "", "DequeEncoder"], [1, 1, 1, "", "HEPDataSet"], [1, 4, 1, "", "feature_vector"], [1, 4, 1, "", "find_hepdata_files"], [1, 4, 1, "", "merge_hepstacks"]], "hepaid.hep.data.DequeEncoder": [[1, 2, 1, "", "default"]], "hepaid.hep.data.HEPDataSet": [[1, 2, 1, "", "add"], [1, 2, 1, "", "as_dataframe"], [1, 3, 1, "", "data"], [1, 2, 1, "", "feature_vector"], [1, 2, 1, "", "is_none"], [1, 2, 1, "", "load_from_directory"], [1, 2, 1, "", "load_json"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "save_json"]], "hepaid.hep.read": [[1, 1, 1, "", "Block"], [1, 1, 1, "", "BlockLine"], [1, 1, 1, "", "BlockLineSLHA"], [1, 1, 1, "", "BlockSLHA"], [1, 1, 1, "", "HiggsBoundsResults"], [1, 1, 1, "", "HiggsSignalsResults"], [1, 1, 1, "", "LesHouches"], [1, 1, 1, "", "MG5Script"], [1, 1, 1, "", "SLHA"], [1, 4, 1, "", "block2dict"], [1, 4, 1, "", "extract_line_elements"], [1, 4, 1, "", "lhe2dict"], [1, 4, 1, "", "lheblock2dict"], [1, 4, 1, "", "read_mg_generation_info"], [1, 4, 1, "", "slha2dict"]], "hepaid.hep.read.Block": [[1, 2, 1, "", "comments"], [1, 2, 1, "", "get"], [1, 2, 1, "", "get_"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "lines"], [1, 2, 1, "", "set"], [1, 2, 1, "", "set_"], [1, 2, 1, "", "values"]], "hepaid.hep.read.BlockLine": [[1, 2, 1, "", "fline"]], "hepaid.hep.read.BlockSLHA": [[1, 2, 1, "", "comments"], [1, 2, 1, "", "entries"], [1, 2, 1, "", "get"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "lines"], [1, 2, 1, "", "set"], [1, 2, 1, "", "values"]], "hepaid.hep.read.HiggsBoundsResults": [[1, 2, 1, "", "read"], [1, 2, 1, "", "save"]], "hepaid.hep.read.HiggsSignalsResults": [[1, 2, 1, "", "read"], [1, 2, 1, "", "save"]], "hepaid.hep.read.LesHouches": [[1, 2, 1, "", "as_dict"], [1, 2, 1, "", "block"], [1, 2, 1, "", "find_block"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "model_param_blocks"], [1, 2, 1, "", "new_file"], [1, 2, 1, "", "read_leshouches"], [1, 2, 1, "", "read_leshouches_from_dict"], [1, 2, 1, "", "read_leshouches_from_dir"]], "hepaid.hep.read.MG5Script": [[1, 2, 1, "", "add_process"], [1, 2, 1, "", "define_multiparticles"], [1, 2, 1, "", "delphes_card"], [1, 2, 1, "", "detector"], [1, 2, 1, "", "import_model"], [1, 2, 1, "", "launch"], [1, 2, 1, "", "output"], [1, 2, 1, "", "param_card"], [1, 2, 1, "", "process"], [1, 2, 1, "", "set_parameters"], [1, 2, 1, "", "show"], [1, 2, 1, "", "shower"], [1, 2, 1, "", "write"]], "hepaid.hep.read.SLHA": [[1, 2, 1, "", "as_dict"], [1, 2, 1, "", "as_txt"], [1, 2, 1, "id0", "block"], [1, 2, 1, "", "find_block"], [1, 2, 1, "", "keys"], [1, 2, 1, "id1", "new_file"], [1, 2, 1, "", "read_blocks"], [1, 2, 1, "", "read_from_dict"], [1, 2, 1, "", "read_slha_from_file"]], "hepaid.hep.stack": [[1, 1, 1, "", "SPheno"], [1, 1, 1, "", "SPhenoHbHs"], [1, 1, 1, "", "SPhenoMg5"], [1, 1, 1, "", "THDMCExt"], [1, 4, 1, "", "input_vector_to_lhs"], [1, 4, 1, "", "register"]], "hepaid.hep.stack.SPheno": [[1, 5, 1, "", "block"], [1, 2, 1, "id2", "close"], [1, 2, 1, "", "create_dir"], [1, 5, 1, "", "current_lhs"], [1, 5, 1, "", "current_spc"], [1, 2, 1, "id3", "get_lhs"], [1, 5, 1, "", "hp"], [1, 5, 1, "", "hp_input"], [1, 5, 1, "", "index"], [1, 5, 1, "", "lhs"], [1, 2, 1, "id4", "run_stack_from_lhs"], [1, 2, 1, "", "sample"], [1, 5, 1, "", "sampler_id_dir"], [1, 5, 1, "", "scan_dir"], [1, 5, 1, "", "spheno"]], "hepaid.hep.stack.SPhenoHbHs": [[1, 2, 1, "", "close"], [1, 2, 1, "", "create_dir"], [1, 2, 1, "", "get_lhs"], [1, 2, 1, "", "run_stack_from_lhs"], [1, 2, 1, "", "sample"]], "hepaid.hep.stack.SPhenoMg5": [[1, 2, 1, "", "run_stack_from_lhs"], [1, 2, 1, "", "update_mg5_script"]], "hepaid.hep.stack.THDMCExt": [[1, 2, 1, "", "close"], [1, 2, 1, "", "create_dir"], [1, 2, 1, "", "sample"]], "hepaid.hep.tools": [[1, 1, 1, "", "HiggsBounds"], [1, 1, 1, "", "HiggsSignals"], [1, 1, 1, "", "Madgraph"], [1, 1, 1, "", "Spheno"], [1, 1, 1, "", "THDMC"]], "hepaid.hep.tools.HiggsBounds": [[1, 2, 1, "", "run"]], "hepaid.hep.tools.HiggsSignals": [[1, 2, 1, "", "run"]], "hepaid.hep.tools.Madgraph": [[1, 2, 1, "", "run"]], "hepaid.hep.tools.Spheno": [[1, 2, 1, "", "run"]], "hepaid.hep.tools.THDMC": [[1, 2, 1, "", "result"], [1, 2, 1, "", "run"]], "hepaid.hep.utils": [[1, 4, 1, "", "block2dict"], [1, 4, 1, "", "body_values_2dict"], [1, 4, 1, "", "body_values_2dict_lhs"], [1, 4, 1, "", "br_2dict"], [1, 4, 1, "", "decay_block_2dict"], [1, 4, 1, "", "dict2json"], [1, 4, 1, "", "generic_block_2dict"], [1, 4, 1, "", "generic_block_2dict_lhs"], [1, 4, 1, "", "json2dict"], [1, 4, 1, "", "lhs2dict"], [1, 4, 1, "", "merge_datasets"], [1, 4, 1, "", "merge_slha_files"], [1, 4, 1, "", "slha2dict"]], "hepaid.search": [[3, 0, 0, "-", "models"], [4, 0, 0, "-", "parallel"], [5, 0, 0, "-", "policy"]], "hepaid.search.models": [[3, 0, 0, "-", "model_list"]], "hepaid.search.models.model_list": [[3, 4, 1, "", "get_and_fit_gp"], [3, 4, 1, "", "get_model_and_likelihood"], [3, 4, 1, "", "get_model_list_gp"], [3, 4, 1, "", "get_posterior"], [3, 4, 1, "", "predict"]], "hepaid.search.parallel": [[4, 0, 0, "-", "modules"]], "hepaid.search.parallel.modules": [[4, 4, 1, "", "run_x_with_pool"]], "hepaid.search.policy": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "bcastor"], [5, 0, 0, "-", "cas"], [5, 0, 0, "-", "eci"], [5, 0, 0, "-", "mcmc"]], "hepaid.search.policy.base": [[5, 1, 1, "", "Policy"]], "hepaid.search.policy.base.Policy": [[5, 5, 1, "", "hp"], [5, 5, 1, "", "hp_name"], [5, 5, 1, "", "iteration"], [5, 2, 1, "id0", "load_checkpoint"], [5, 5, 1, "", "metrics"], [5, 5, 1, "", "objective_function"], [5, 2, 1, "", "save_checkpoint"], [5, 5, 1, "", "save_path"]], "hepaid.search.policy.bcastor": [[5, 1, 1, "", "bCASTOR"], [5, 4, 1, "", "bcastor_step"], [5, 4, 1, "", "create_optuna_objective"], [5, 4, 1, "", "optuna_study_cmaes"], [5, 4, 1, "", "optuna_study_nsgaii"], [5, 4, 1, "", "optuna_study_tpe"], [5, 4, 1, "", "rank_based_sampling"], [5, 4, 1, "", "sort_and_get_n_maximum"], [5, 4, 1, "", "study_to_array"]], "hepaid.search.policy.bcastor.bCASTOR": [[5, 5, 1, "", "delta_r"], [5, 5, 1, "", "eci"], [5, 5, 1, "", "iteration"], [5, 5, 1, "", "likelihood"], [5, 5, 1, "", "metrics"], [5, 5, 1, "", "model"], [5, 2, 1, "", "run"], [5, 5, 1, "", "study"]], "hepaid.search.policy.cas": [[5, 1, 1, "", "CAS"], [5, 4, 1, "", "eci_step"]], "hepaid.search.policy.cas.CAS": [[5, 5, 1, "", "delta_r"], [5, 5, 1, "", "eci"], [5, 5, 1, "", "iteration"], [5, 5, 1, "", "likelihood"], [5, 5, 1, "", "metrics"], [5, 5, 1, "", "model"], [5, 2, 1, "", "run"]], "hepaid.search.policy.eci": [[5, 1, 1, "", "ECI"], [5, 4, 1, "", "covar_dist"], [5, 4, 1, "", "dist"], [5, 4, 1, "", "smooth_box_mask"], [5, 4, 1, "", "smooth_mask"], [5, 4, 1, "", "sq_dist"]], "hepaid.search.policy.eci.ECI": [[5, 5, 1, "", "_thresholds"], [5, 5, 1, "", "ball_of_points"], [5, 5, 1, "", "base_points"], [5, 5, 1, "", "bounds"], [5, 5, 1, "", "constraints"], [5, 3, 1, "", "dim"], [5, 3, 1, "", "num_outputs"], [5, 5, 1, "", "punchout_radius"], [5, 5, 1, "", "train_inputs"], [5, 5, 1, "", "train_x"], [5, 5, 1, "", "train_y"]], "hepaid.search.policy.mcmc": [[5, 1, 1, "", "MCMCMH"], [5, 4, 1, "", "auto_likelihood"], [5, 4, 1, "", "mcmc_updater"], [5, 4, 1, "", "proposal_distribution"], [5, 4, 1, "", "sigmoid"], [5, 4, 1, "", "smooth_box_mask"], [5, 4, 1, "", "smooth_mask"], [5, 4, 1, "", "tune"]], "hepaid.search.policy.mcmc.MCMCMH": [[5, 5, 1, "", "accepted"], [5, 5, 1, "", "adapt_frequency"], [5, 5, 1, "", "curr_likeli"], [5, 5, 1, "", "curr_state"], [5, 5, 1, "", "idx_burnin"], [5, 5, 1, "", "iteration"], [5, 5, 1, "", "likelihood"], [5, 2, 1, "", "run"], [5, 5, 1, "", "scale"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [1, 5, 7, 8, 9, 10, 12], "0": [1, 3, 5, 8, 9, 12], "002": 5, "0ish": 5, "0x107732b10": 8, "0x12220ee90": 12, "0x13d3cc910": [], "1": [1, 3, 5, 8, 9, 12], "10": [8, 9, 12], "100": [5, 8, 12], "11": 9, "123": 1, "14": 9, "15": 5, "18653": 5, "19680801": [8, 12], "1e": 5, "1ish": 5, "2": [1, 3, 5, 7, 9, 10], "2014": [], "234": 5, "23e10": 1, "2404": 5, "25": 1, "2hdmc": 1, "3": [1, 5, 9], "4": [1, 5, 7, 8, 9, 10, 12], "5": [1, 5, 8, 9, 12], "512": 5, "6": [1, 9], "7": 9, "95": 5, "A": [1, 3, 5, 9], "As": [8, 12], "But": [8, 12], "For": [1, 8, 9, 12], "If": [1, 5, 7, 10], "In": [5, 9], "It": [1, 5, 6], "That": [7, 10], "The": [1, 3, 5, 7, 9, 10], "Then": 9, "There": [8, 9, 12], "These": 5, "To": [1, 5, 9], "With": [7, 10], "_": 9, "__call__": 1, "__init__": 5, "_threshold": [2, 5], "aa": 9, "aabb": 9, "aabbtautau": 9, "ab": 5, "about": [7, 8, 10, 12], "abov": 3, "accept": [2, 5], "access": 1, "accommod": 9, "accord": [1, 5], "accumul": 5, "achiev": 5, "acord": 1, "acquisit": 5, "activ": [5, 9], "ad": 1, "adapt": 5, "adapt_frequ": [2, 5], "add": [0, 1], "add_": [8, 12], "add_process": [0, 1], "addit": [5, 9], "addition": 9, "address": 9, "adjust": 5, "after": [1, 5, 9], "against": 9, "aggreg": 5, "aid": 9, "aim": [5, 9], "algorithm": [5, 9], "align": [8, 12], "all": [1, 5, 7, 10], "allow": [], "allow_nan": 1, "alpha": 5, "also": [7, 8, 9, 10, 12], "altern": 5, "an": [1, 5, 9], "analys": 9, "analysi": 5, "ani": [1, 4, 5, 6, 7, 10], "ank": 9, "anoth": [1, 5], "appli": 5, "applic": 1, "approach": [5, 9], "ar": [1, 5, 7, 9, 10], "arbitrari": 1, "argument": 5, "around": 5, "arrai": [1, 5, 8, 9, 12], "arxiv": 5, "as_datafram": [0, 1], "as_dict": [0, 1], "as_numpi": 1, "as_txt": [0, 1], "asp": 9, "asp_mu_aa": 9, "asp_mu_aabb": 9, "asp_mu_aabbtautau": 9, "assert": 1, "assertionerror": 5, "assess": 9, "associ": [1, 5], "assum": [3, 5], "atch": 9, "atribut": 1, "attribut": [1, 5], "auditori": [], "australia": [], "auto_likelihood": [2, 5], "automat": 5, "avail": 9, "ax": [8, 12], "b": [5, 6], "ball_of_point": [2, 5], "banner": 1, "base": [0, 1, 2, 7, 9, 10], "base_point": [2, 5], "basi": 1, "basicali": 1, "batch": [5, 9], "bayesian": 5, "bb": 9, "bcastor": [0, 2, 9], "bcastor_hyper_param": 9, "bcastor_run": 9, "bcastor_step": [2, 5], "begin": [8, 9, 12], "behav": 1, "being": [], "below": 3, "between": 5, "beyond": [5, 9], "bh": 9, "bib": [], "bibliographi": [], "bibtex": [], "block": [0, 1, 7, 10], "block2dict": [0, 1], "block_bodi": 1, "block_categor": 1, "block_categori": 1, "block_com": 1, "block_index": 1, "block_list": 1, "block_nam": 1, "blocklin": [0, 1], "blocklineslha": [0, 1], "blockslha": [0, 1], "blssm": [1, 9], "blssm_config_v2": 9, "bodi": 1, "body_values_2dict": [0, 1], "body_values_2dict_lh": [0, 1], "book": [7, 8, 10, 12], "bool": [1, 5], "boolean": 5, "booth": 9, "borrow": 5, "both": [], "botorch": 5, "bound": [1, 2, 3, 5], "boundari": 5, "box": [], "br_2dict": [0, 1], "branch": 1, "brian": [], "brisban": [], "bsm": 9, "build": 9, "built": [7, 10], "bundl": 6, "burn": 5, "c": 9, "ca": [0, 2], "calcul": [1, 5, 9], "call": 1, "callabl": [1, 4, 5], "can": [1, 5, 7, 8, 9, 10, 12], "capabl": 9, "captur": 1, "carlo": 5, "case": [5, 9], "castor": 6, "categor": 1, "categori": 1, "cdist": 5, "center": 5, "cerro": 5, "chain": [1, 5], "challeng": 9, "chan": 1, "chang": [1, 5], "channel": 9, "characteris": 9, "charged_higg": 1, "check": [6, 8, 12], "check_circular": 1, "checkpoint": 5, "cheng": 5, "chi": 9, "christoph": [], "cite": [], "clamp": 5, "class": [1, 5, 9], "clean": 1, "clear": 1, "close": [0, 1], "cm": [8, 12], "cmae": 5, "cmap": [8, 12], "code": [7, 9, 10], "cognit": [], "cold": [8, 12], "collect": 5, "color": [8, 12], "com": 9, "combin": [3, 9], "comma": 1, "command": [1, 7, 10], "comment": [0, 1], "commonli": 9, "commonmark": [], "compress": 1, "comput": [1, 3, 5], "computation": 9, "conda": 9, "condit": 5, "confer": [], "confid": 3, "config": [5, 9], "configur": [1, 5, 9], "consist": 1, "constrain": 9, "constraint": [2, 5, 9], "constraint_active_search": 5, "contain": [1, 3, 5], "content": [6, 7, 10, 11], "contextlib": [8, 12], "continu": 5, "contrain": 1, "convert": [1, 5, 7, 10], "coolwarm": [8, 12], "copi": 9, "copress": 1, "core": 9, "correspond": [1, 5], "cortex": [], "could": 1, "counter": [1, 5], "covar_dist": [2, 5], "cover": 5, "coverag": 5, "cp": 9, "cr": 5, "creat": [1, 3, 5, 8, 9, 12], "create_dir": [0, 1], "create_optuna_object": [2, 5], "criterion": 5, "cross": 9, "cross_section_pb": 1, "csq": 1, "ctive": 9, "curr_lik": [2, 5], "curr_stat": [2, 5], "current": [1, 5, 9], "current_lh": [0, 1], "current_spc": [0, 1], "custom": 5, "custom_lin": [8, 12], "cycler": [8, 12], "d": [1, 3, 5, 7, 10], "d1": 1, "d1bar": 1, "d2": 1, "d2bar": 1, "dasmahapatra": 5, "dat": 1, "data": [0, 5, 8, 9, 11, 12], "data_nam": 1, "databas": 1, "datafram": 1, "dataset": [1, 5, 9], "de": [], "deactiv": 1, "decai": 1, "decay_block_2dict": [0, 1], "decay_width": 1, "def": [1, 9], "default": [0, 1, 5, 7, 10], "defin": [1, 5, 7, 9, 10], "define_multiparticl": [0, 1], "degre": 5, "delph": 1, "delphes_card": [0, 1], "delta_r": [2, 5], "denot": 5, "depend": 5, "depth": 6, "dequ": 1, "dequeencod": [0, 1], "descend": 5, "describ": 5, "descript": 1, "design": [1, 5], "desir": 5, "detail": [1, 7, 10], "detector": [0, 1], "determin": 5, "develop": 5, "deviat": 3, "diag": 5, "diaz": 5, "dict": [1, 4, 5], "dict2json": [0, 1], "dictconfig": [1, 5], "dictionari": [1, 5, 9], "differ": [], "dim": [2, 5], "dimens": [3, 5, 9], "dimension": 9, "diphoton_paper_v2": 9, "dir": 1, "direct": [5, 7, 10], "direct_path": 1, "directori": [1, 9], "disconnect": 9, "discoveri": 5, "discuss": 9, "disk": 1, "displai": [7, 10], "dist": [2, 5], "distanc": 5, "distribut": [5, 9], "divers": 5, "do": [1, 8, 12], "document": [6, 7, 8, 10, 12], "doe": 6, "dollar": [8, 12], "don": 1, "doubl": 5, "double_constraint": [5, 9], "download": 9, "ds_1": 1, "ds_2": 1, "dure": 5, "e": [5, 9], "e1": 1, "e1bar": 1, "e2": 1, "e2bar": 1, "each": [1, 3, 5, 9], "earch": 9, "easier": 1, "eci": [0, 2, 9], "eci_step": [2, 5], "ecosystem": [], "effect": [1, 9], "effici": [5, 9], "either": 5, "element": [1, 5], "els": 1, "emb": [8, 12], "emploi": 9, "enabl": 5, "end": [8, 9, 12], "enhanc": [5, 9], "ensur": 5, "ensure_ascii": 1, "entri": [0, 1], "env": 9, "environ": 9, "ep": 5, "equival": 5, "error": 1, "escap": [8, 12], "estim": 5, "etc": [8, 12], "euclidean": 5, "evalu": [5, 9], "everi": 1, "evid": [], "ewsb": 9, "ex": 1, "exactgp": 3, "exampl": [1, 8, 12], "except": 1, "execut": [1, 5, 7, 9, 10], "exitstack": [8, 12], "expect": 5, "expectedcoverageimprov": 5, "expens": 9, "experi": 9, "experiment": [5, 9], "experiments_pap": 9, "explain": 9, "expon": 5, "export": 1, "extens": [], "extern": [1, 5], "extract": [1, 5], "extract_line_el": [0, 1], "f": 9, "f_b": 9, "f_h": 9, "face": 9, "fals": [1, 5], "featur": 5, "feature_vector": [0, 1], "feel": 6, "few": 6, "fig": [8, 12], "figsiz": [8, 12], "figur": 1, "file": [1, 5, 6, 7, 9, 10], "file_dir": 1, "file_path": 1, "filenam": 1, "fill": 5, "final": [1, 9], "final_dataset": 9, "find": [1, 5], "find_block": [0, 1], "find_hepdata_fil": [0, 1], "first": [1, 5], "fit": [3, 5, 9], "fix": [8, 12], "flavor": [], "fline": [0, 1], "float": [1, 5], "folder": 9, "follow": [1, 3, 7, 9, 10], "form": 1, "format": 1, "formul": 5, "found": [1, 9], "frequenc": 5, "from": [1, 5, 8, 9, 12], "frontier": 5, "full_covar": 5, "function": [1, 3, 4, 5], "funtion": 9, "g": [1, 5], "gamma": 9, "gather": 1, "gaussian": [3, 5], "gener": [5, 9], "generic_block_2dict": [0, 1], "generic_block_2dict_lh": [0, 1], "get": [0, 1, 7, 10], "get_": [0, 1], "get_and_fit_gp": [2, 3], "get_lh": [0, 1], "get_model_and_likelihood": [2, 3], "get_model_list_gp": [2, 3], "get_posterior": [2, 3], "gev": 5, "git": 9, "github": 9, "give": 6, "given": [1, 3, 5], "global": 1, "go": 6, "goal": 5, "gp": [3, 5], "gpytorch": 3, "greater": 5, "grid": 9, "gt": [5, 9], "guid": [8, 12], "gz": 1, "h": [1, 5, 9], "h1": 1, "h2": 1, "handl": 1, "handler": 1, "hast": 5, "have": [7, 10], "hb": [1, 9], "hbresult": 1, "hdhpk14": [], "header": 1, "header_lin": 1, "heer": [], "help": [], "helper": 5, "hep": [0, 6, 9, 11], "hep_config": 1, "hep_fil": 9, "hep_path": 9, "hep_stack": 1, "hepaid": 6, "hepdataset": [0, 1], "hepstack": 1, "hepstack_list": 1, "here": [8, 12], "higg": 1, "higgs_bounds_dir": 1, "higgs_signals_dir": 1, "higgsbound": [0, 1, 9], "higgsbounds_result": 1, "higgsboundsresult": [0, 1], "higgssign": [0, 1, 9], "higgssignals_result": 1, "higgssignalsresult": [0, 1], "higgstool": 9, "high": 9, "himmelblau": 9, "himmelblau_booth": 9, "histori": 5, "hold": 1, "holdgraf": [], "holdgraf_evidence_2014": [], "hot": [8, 12], "houch": 1, "how": [1, 6, 7, 10], "howev": 9, "hp": [0, 1, 2, 5], "hp_input": [0, 1], "hp_name": [2, 5], "hprm": 5, "html": [8, 12], "http": [5, 9], "human": [], "hyper": [5, 9], "hyper_paramet": 5, "hyperparamet": 5, "i": [1, 3, 5, 6, 7, 8, 9, 10, 12], "id": 1, "identifi": [1, 9], "idx": 1, "idx_burnin": [2, 5], "ii": [8, 12], "imag": [8, 12], "implement": [1, 5, 9], "import": [8, 9, 12], "import_model": [0, 1], "improv": [5, 9], "in_file_nam": 1, "in_spheno_output": 1, "includ": [1, 7, 8, 10, 12], "increas": 5, "indent": 1, "index": [0, 1], "indic": [1, 5], "individu": 3, "info": 1, "inform": [6, 7, 8, 10, 12], "inherit": 5, "init": [7, 10], "initi": [1, 5], "initialis": 1, "inlin": [], "input": [1, 3, 5, 9], "input_fil": 1, "input_file_nam": 1, "input_paramet": 9, "input_vector_to_lh": [0, 1], "inputfil": 1, "insert": [], "instal": 9, "instanc": [1, 5], "instanti": 9, "instruct": [7, 10], "int": [1, 4, 5], "intanci": 9, "integ": 1, "integr": [1, 5], "interact": [8, 12], "intern": 1, "introduc": 9, "ion": [8, 12], "ipynb": 9, "is_non": [0, 1], "iter": [1, 2, 5, 9], "its": [1, 5], "j": 1, "join": 1, "json": 1, "json2dict": [0, 1], "jsonencod": 1, "jupyt": [7, 8, 9, 10, 12], "jupyterbook": [], "jupytext": [7, 10], "just": [1, 5], "k": [1, 5], "keep": [8, 12], "kei": [0, 1, 5], "kernel": [5, 7, 10], "keys_dict": 1, "kind": [], "knight": [], "know": 1, "known": 5, "l": [1, 5], "la_": [8, 12], "lambda1": 1, "lambda2": 1, "lambda3": 1, "lambda4": 1, "lambda5": 1, "lambda6": 1, "lambda7": 1, "languag": [], "larg": 9, "last": [1, 5, 9], "last_dim_is_batch": 5, "launch": [0, 1], "le": 1, "lee": 5, "left": 9, "legend": [8, 12], "len": 1, "leshouc": 1, "leshouch": [0, 1], "let": [1, 7, 10], "lh": [0, 1], "lhe": [1, 9], "lhe2dict": [0, 1], "lheblock2dict": [0, 1], "lhs2dict": [0, 1], "librari": 9, "like": [1, 7, 9, 10], "likelihood": [2, 3, 5, 9], "line": [0, 1, 7, 8, 10, 12], "line2d": [8, 12], "line_categori": 1, "linspac": [8, 12], "list": [1, 3, 4, 5], "ll": [], "load": [1, 5, 9], "load_checkpoint": [2, 5], "load_from_directori": [0, 1], "load_json": [0, 1], "local": 1, "locat": [1, 9], "log": [5, 9], "logspac": [8, 12], "lot": [8, 12], "lower": [3, 9], "lt": [5, 9], "lw": [8, 12], "m": [5, 9], "m0": 1, "m12_2": 1, "madgraph": [0, 1, 9], "madgraph_dir": 1, "main": 9, "major": 6, "make": [8, 9, 12], "makespheno": 9, "makeufo": 9, "malkom": 5, "mamba": 9, "manag": 1, "mani": [5, 7, 10], "manipul": 1, "map": 1, "markdown": 6, "markdownfil": [7, 10], "markedli": [], "markov": 5, "markup": [], "mass": 9, "math": [8, 12], "mathbf": [5, 9], "mathcal": 9, "mathematica": 9, "matplotlib": [8, 12], "matrix": 5, "maxim": 5, "maximis": 5, "mbox": [8, 12], "mccourt": 5, "mcmc": [0, 2, 9], "mcmc_ray_aa": 9, "mcmc_results_and_plot": 9, "mcmc_updat": [2, 5], "mcmcmh": [2, 5], "md": [7, 10], "mean": [3, 8, 12], "mean_prediction_point": 3, "measur": 5, "medium": [8, 12], "merg": 1, "merge_dataset": [0, 1], "merge_hepstack": [0, 1], "merge_slha_fil": [0, 1], "metadata": 1, "method": [1, 3, 5], "metric": [2, 5, 9], "metropoli": 5, "mg5": [1, 9], "mg5_amc_v3_5_0": 9, "mg5_gen_info": 1, "mg5_script": 1, "mg5inputfil": 1, "mg5script": [0, 1], "mggenerationinfo": 1, "mh": [1, 5], "mhplu": 1, "micromamba": 9, "minimum": 5, "minpar": 1, "mjadiaz": 9, "mkdir": 9, "mode": [1, 5, 9], "model": [0, 1, 2, 5, 6, 9], "model_input": 1, "model_list": [0, 2], "model_list_gp": [3, 5], "model_nam": 1, "model_param_block": [0, 1], "modellistgp": 3, "modeloutput": 9, "modifi": [1, 5], "modul": 11, "mont": 5, "more": [6, 7, 8, 10, 12], "moreov": 9, "moretti": 5, "most": [], "mostli": 1, "mu": 1, "mu_": 9, "mult": 5, "multi": 9, "multiobject": 5, "multipli": 5, "must": [1, 5], "mutablemap": 1, "my_dict": 1, "myst": 6, "n": [1, 5, 8, 9, 12], "n_featur": 3, "n_output": 3, "n_point": 5, "n_sampl": 3, "n_trial": 5, "n_worker": 4, "name": [1, 5, 9], "ncomb": 1, "ndarrai": [1, 4, 5], "necesari": 1, "need": [5, 7, 9, 10], "neurosci": [], "neutral": 9, "neutral_higg": 1, "new": [1, 5, 9], "new_fil": [0, 1], "new_file_nam": 1, "next": 5, "nob": 1, "non": 1, "none": [1, 5], "normal": [3, 5], "notat": 1, "note": 1, "notebook": [6, 9], "now": 9, "np": [1, 5, 8, 9, 12], "nsgaii": 5, "num_output": [2, 5], "num_sampl": 5, "number": [1, 5, 9], "number_of_ev": 1, "numer": 9, "numpi": [1, 5, 8, 12], "o": [1, 9], "obj": 1, "obj_fn_export": 5, "object": [1, 5], "objective_fn": 9, "objective_funct": [2, 5, 9], "objectivefunct": [5, 9], "objetivefunct": 9, "observ": 9, "obsratio": 1, "obtain": [1, 9], "off": [1, 6, 7, 10], "often": 9, "omegaconf": 9, "one": [1, 3, 9], "onli": 9, "onstrain": 9, "oper": 1, "optim": [5, 9], "optimis": 5, "option": [1, 5], "optuna": [5, 9], "optuna_studi": 9, "optuna_study_cma": [2, 5], "optuna_study_nsgaii": [2, 5], "optuna_study_tp": [2, 5], "order": 5, "org": 5, "origin": 5, "other": [1, 7, 10], "otherwis": 5, "ouput": 9, "our": 9, "out": [1, 6, 8, 12], "out_fil": 1, "out_file_nam": 1, "output": [0, 1, 3, 5, 7, 9, 10], "output_mod": 1, "output_nam": 1, "output_paramet": 9, "over": 5, "overview": [], "p": [1, 5], "packag": [6, 9, 11], "page": [6, 7, 10], "pair": 5, "panda": 1, "paper": 9, "parallel": [0, 2, 6, 9], "param": [1, 5], "param1": 5, "param2": 5, "param_card": [0, 1], "param_valu": 1, "paramet": [1, 3, 9], "parameter_numb": 1, "parameter_point": 1, "parameter_valu": 1, "pareto": 5, "part": 9, "particl": 9, "particular": 6, "parzen": 5, "paslei": [], "pass": 1, "path": [1, 5, 7, 10], "pattern": 1, "pe": 9, "percentag": 1, "perform": [3, 5, 9], "phase": 5, "phenomenolog": 9, "physic": 9, "pid": 1, "pip": 9, "place": 5, "plot": [8, 9, 12], "plt": [8, 12], "point": [1, 3, 5], "polici": [0, 2, 6], "popul": 9, "portion": 1, "possibl": 5, "possibli": 1, "post": [8, 12], "posterior": 3, "potenti": 9, "power": [], "pph1aa": 1, "pre": 9, "predefin": 1, "predict": [2, 3], "presenc": [7, 10], "preview": 1, "previou": 9, "print": [1, 7, 10], "prioritis": 5, "probabilist": [5, 9], "probabl": 5, "problem": 5, "process": [0, 1, 3, 5], "program": 1, "program_nam": 1, "progress": 5, "prop_cycl": [8, 12], "properli": [], "properti": [1, 5], "propos": 5, "proposal_distribut": [2, 5], "provid": [1, 5, 9], "ptimis": 9, "punchout_radiu": [2, 5], "purpos": [], "pvalu": 1, "py": 9, "pymc3": 5, "pyplot": [8, 12], "pythia8": 1, "python": 9, "q": 1, "q_valu": 1, "queri": 1, "quit": 9, "r": 9, "radiu": 5, "rai": 9, "rais": 1, "ramsai": [], "randn": [8, 12], "random": [5, 8, 12], "rang": [8, 12], "rank": 5, "rank_based_sampl": [2, 5], "rate": 5, "rather": 5, "ratio": [1, 5], "rcparam": [8, 12], "read": [0, 11], "read_block": [0, 1], "read_from_dict": [0, 1], "read_leshouch": [0, 1], "read_leshouches_from_dict": [0, 1], "read_leshouches_from_dir": [0, 1], "read_mg_generation_info": [0, 1], "read_slha_from_fil": [0, 1], "refer": [1, 5, 9], "reference_lh": [1, 9], "region": [5, 9], "regist": [0, 1], "regular": [], "reinterpret": 5, "relat": 1, "relev": 1, "remov": 1, "render": [], "repres": [1, 3], "reproduc": [8, 12], "request": 1, "reset": [0, 1], "resolut": 5, "reson": 5, "respect": [1, 9], "rest": [7, 10], "result": [0, 1, 5], "return": [3, 9], "right": 9, "robert": [], "run": [0, 1, 2, 5, 7, 9, 10], "run_01_tag_1_bann": 1, "run_nam": 1, "run_stack_from_lh": [0, 1], "run_x_with_pool": [2, 4], "same": [], "sampl": [0, 1, 5, 6, 8, 9, 12], "sampler": 1, "sampler_id": 1, "sampler_id_dir": [0, 1], "sarah": 9, "sarah_path": 9, "satisfactori": [5, 9], "satisfi": 5, "save": [0, 1, 5], "save_checkpoint": [2, 5], "save_json": [0, 1], "save_path": [2, 5], "scalar": 9, "scale": [2, 5], "scan": 1, "scan_dir": [0, 1, 9], "scan_directori": 9, "scientif": 1, "script": [1, 9], "search": [0, 1, 6, 9, 11], "search_hyper_paramet": 9, "second": 5, "section": [1, 9], "see": [6, 7, 8, 10, 12], "seed": [8, 12], "self": [1, 5], "separ": 1, "serializ": 1, "serv": [], "set": [0, 1, 5, 9], "set_": [0, 1], "set_param": 1, "set_paramet": [0, 1], "setup": 9, "shape": [3, 5], "should": [5, 7, 9, 10], "show": [0, 1, 6, 7, 10], "shower": [0, 1], "sigmoid": [2, 5], "sign": [8, 12], "signal": [1, 9], "signific": 9, "similar": 9, "simpl": [3, 5], "simplifi": 1, "simul": 1, "sinc": 1, "singl": [1, 5], "single_constraint": [5, 9], "single_run": 9, "singletaskgp": 3, "size": 5, "skipkei": 1, "slha": [0, 1], "slha2dict": [0, 1], "slha_": 1, "slha_dict": 1, "slha_list": 1, "slhadataset": 1, "slight": [], "small": 6, "smooth_box_mask": [2, 5], "smooth_mask": [2, 5], "so": [7, 10], "some": [1, 6, 8, 12], "sometim": 1, "sort": 5, "sort_and_get_n_maximum": [2, 5], "sort_kei": 1, "space": [3, 5, 9], "space_config": [5, 9], "span": [], "spars": 9, "spc": 1, "special": [], "specif": 1, "specifi": [1, 5], "spectrum": 1, "spheno": [0, 1, 9], "spheno_dir": 1, "spheno_path": 9, "spheno_stdout": 1, "sphenoblssm": 9, "sphenohbh": [0, 1], "sphenomg5": [0, 1], "sphenomodel": 1, "sphenomodel_input": 1, "sphenomodel_output": 1, "sphere": 5, "sphinx": [], "spin": 5, "sq_dist": [2, 5], "squar": 5, "square_dist": 5, "ssm": 5, "stack": [0, 11], "stand": [], "standard": [1, 3, 5, 9], "start": [1, 7, 9, 10], "starter": [], "state": [5, 8, 12], "static": 1, "statist": 9, "stdout": 1, "step": [3, 5], "stepsiz": 5, "store": 1, "str": [1, 4, 5], "strategi": [5, 9], "string": [1, 5], "structur": [1, 5, 6, 9], "studi": [2, 5, 9], "study_to_arrai": [2, 5], "subclass": 1, "submodul": [0, 2, 11], "subpackag": 11, "subplot": [8, 12], "subprocess": 1, "succe": 1, "successfulli": [1, 5], "suggest": 5, "sum": 5, "support": [1, 5, 7, 10], "sure": [8, 12], "surrog": [5, 9], "sweep_decai": 9, "syntax": 1, "t": [1, 8, 9, 12], "tag": 1, "take": 1, "tan_beta": 1, "target": [3, 5], "target_accept": 5, "tau": 9, "templat": 1, "tensor": [3, 5], "term1": 9, "term2": 9, "test": 3, "test_funct": 9, "test_point": 3, "tex": [8, 12], "text": [1, 7, 10], "than": 5, "thdmc": [0, 1], "thdmcext": [0, 1], "thei": [], "them": [1, 3, 9], "theori": 9, "theta": 9, "theta_1": 9, "theta_2": 9, "thi": [1, 5, 6, 7, 8, 9, 10, 12], "thing": [7, 10], "those": [], "three": 9, "threshold": 5, "todo": 1, "tool": [0, 11], "tool_dir": 1, "top": [5, 7, 10], "topic": 6, "torch": [3, 5], "tot": 1, "tpe": 5, "track": 5, "train": [3, 5], "train_i": [2, 3, 5], "train_input": [2, 5], "train_x": [2, 3, 5], "treat": [5, 7, 10], "tree": 5, "trial": 5, "true": [1, 3, 5], "try": 1, "tune": [2, 5], "tupl": [1, 5], "turn": 1, "tutori": 5, "two": [1, 5, 7, 10], "txt": 1, "type": [1, 3, 5, 6], "typeerror": 1, "u1": 1, "u1bar": 1, "u2": 1, "u2bar": 1, "ufo": 9, "ufo_model": 1, "understand": [7, 10], "uniform": 9, "union": 1, "up": [1, 9], "updat": [1, 5], "update_mg5_script": [0, 1], "upper": [3, 9], "us": [1, 3, 5, 7, 10], "usual": 1, "util": [0, 11], "valu": [0, 1, 3, 5], "variabl": [1, 5], "variant": 5, "variat": [], "variou": 1, "vector": [1, 5], "viabil": 9, "view": 1, "volum": [5, 9], "wa": 5, "want": [8, 12], "we": 9, "well": [6, 8, 12], "wendi": [], "when": [7, 10], "where": [1, 3, 5, 9], "wherea": [], "whether": 5, "which": [1, 3, 5, 7, 9, 10], "whole": [1, 5], "why": 1, "width": 1, "within": [1, 5, 9], "work": [1, 8, 9, 12], "work_dir": 1, "write": [0, 1, 7, 10], "written": [7, 9, 10], "x": [3, 4, 5, 9], "x1": 5, "x1_eq_x2": 5, "x2": 5, "x_1": 5, "x_2": 5, "x_next": 5, "y": [3, 5, 9], "yaml": [5, 9], "yml": 9, "you": [1, 6, 7, 8, 10, 12], "your": [7, 8, 10, 12]}, "titles": ["hepaid package", "hepaid.hep package", "hepaid.search package", "hepaid.search.models package", "hepaid.search.parallel package", "hepaid.search.policy package", "Welcome to your Jupyter Book", "Notebooks with MyST Markdown", "Content with notebooks", "b-CASTOR", "Notebooks with MyST Markdown", "hepaid", "Content with notebooks"], "titleterms": {"2d": 9, "95": 9, "add": [7, 10], "an": [7, 10], "arg": 1, "b": 9, "base": 5, "bcastor": 5, "block": [8, 12], "book": 6, "ca": 5, "castor": 9, "cell": [7, 10], "citat": [], "code": [8, 12], "content": [0, 1, 2, 3, 4, 5, 8, 12], "creat": [7, 10], "custom": 9, "data": 1, "direct": [], "doubl": 9, "eci": 5, "exampl": [5, 7, 9, 10], "file": [], "function": 9, "gev": 9, "hep": 1, "hepaid": [0, 1, 2, 3, 4, 5, 11], "higg": 9, "i": [], "jupyt": 6, "l": 9, "learn": [], "markdown": [7, 8, 10, 12], "mcmc": 5, "metadata": [7, 10], "model": 3, "model_list": 3, "modul": [0, 1, 2, 3, 4, 5], "more": [], "myst": [7, 8, 10, 12], "notebook": [7, 8, 10, 12], "object": 9, "output": [8, 12], "overview": 9, "packag": [0, 1, 2, 3, 4, 5], "parallel": 4, "paramet": 5, "polici": 5, "problem": 9, "quickli": [7, 10], "rais": 5, "read": 1, "requir": 9, "result": 9, "return": [1, 5], "role": [], "sampl": [], "search": [2, 3, 4, 5], "ssm": 9, "stack": 1, "submodul": [1, 3, 4, 5], "subpackag": [0, 2], "test": 9, "tool": 1, "us": 9, "util": 1, "welcom": 6, "what": [], "yaml": [7, 10], "your": 6}})